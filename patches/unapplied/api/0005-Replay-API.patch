From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: GideonWhite1029 <gideonwhite1029@gmail.com>
Date: Tue, 16 Apr 2024 19:04:26 +0400
Subject: [PATCH] Replay API


diff --git a/src/main/java/dev/horizonmc/horizon/entity/Photographer.java b/src/main/java/dev/horizonmc/horizon/entity/Photographer.java
new file mode 100644
index 0000000000000000000000000000000000000000..23eacf4232ec5b13bf391274061eb30201f1071d
--- /dev/null
+++ b/src/main/java/dev/horizonmc/horizon/entity/Photographer.java
@@ -0,0 +1,27 @@
+package dev.horizonmc.horizon.entity;
+
+import org.bukkit.entity.Player;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import java.io.File;
+
+public interface Photographer extends Player {
+
+    @NotNull
+    public String getId();
+
+    public void setRecordFile(@NotNull File file);
+
+    public void stopRecording();
+
+    public void stopRecording(boolean async);
+
+    public void stopRecording(boolean async, boolean save);
+
+    public void pauseRecording();
+
+    public void resumeRecording();
+
+    public void setFollowPlayer(@Nullable Player player);
+}
diff --git a/src/main/java/dev/horizonmc/horizon/entity/PhotographerManager.java b/src/main/java/dev/horizonmc/horizon/entity/PhotographerManager.java
new file mode 100644
index 0000000000000000000000000000000000000000..1bbf332d0ec975105379fd99fdb7e9f49e359c50
--- /dev/null
+++ b/src/main/java/dev/horizonmc/horizon/entity/PhotographerManager.java
@@ -0,0 +1,33 @@
+package dev.horizonmc.horizon.entity;
+
+import org.bukkit.Location;
+import org.bukkit.util.Consumer;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+import dev.horizonmc.horizon.entity.botaction.CustomBotAction;
+import dev.horizonmc.horizon.replay.BukkitRecorderOption;
+
+import java.util.Collection;
+import java.util.UUID;
+
+public interface PhotographerManager {
+    @Nullable
+    public Photographer getPhotographer(@NotNull UUID uuid);
+
+    @Nullable
+    public Photographer getPhotographer(@NotNull String id);
+
+    @Nullable
+    public Photographer createPhotographer(@NotNull String id, @NotNull Location location);
+
+    @Nullable
+    public Photographer createPhotographer(@NotNull String id, @NotNull Location location, @NotNull BukkitRecorderOption recorderOption);
+
+    public void removePhotographer(@NotNull String id);
+
+    public void removePhotographer(@NotNull UUID uuid);
+
+    public void removeAllPhotographers();
+
+    public Collection<Photographer> getPhotographers();
+}
diff --git a/src/main/java/dev/horizonmc/horizon/replay/BukkitRecorderOption.java b/src/main/java/dev/horizonmc/horizon/replay/BukkitRecorderOption.java
new file mode 100644
index 0000000000000000000000000000000000000000..24da9e18835f0d214a935e6726c736dd6d7c30ef
--- /dev/null
+++ b/src/main/java/dev/horizonmc/horizon/replay/BukkitRecorderOption.java
@@ -0,0 +1,17 @@
+package dev.horizonmc.horizon.replay;
+
+public class BukkitRecorderOption {
+    // public int recordDistance = -1;
+    public String serverName = "Horizon";
+    public BukkitRecordWeather forceWeather = BukkitRecordWeather.NULL;
+    public int forceDayTime = -1;
+    public boolean ignoreChat = false;
+    // public boolean ignoreItem = false;
+
+    public enum BukkitRecordWeather {
+        CLEAR,
+        RAIN,
+        THUNDER,
+        NULL
+    }
+}
diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index 22aacb93b550f0ee4e11692a5c2b5b246fddeadd..73f71952e79d517e7174a5ebc8066067b21a34e3 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -16,6 +16,7 @@ import java.util.function.Consumer;
 import java.util.logging.Logger;
 
 import dev.horizonmc.horizon.entity.BotManager;
+import dev.horizonmc.horizon.entity.PhotographerManager;
 import org.bukkit.Warning.WarningState;
 import org.bukkit.advancement.Advancement;
 import org.bukkit.block.data.BlockData;
@@ -2932,6 +2933,12 @@ public final class Bukkit {
     }
     // Horizon end - Bot API
 
+    // Leaves start - Photographer API
+    public static @NotNull PhotographerManager getPhotographerManager() {
+        return server.getPhotographerManager();
+    }
+    // Leaves end - Photographer API
+
     @NotNull
     public static Server.Spigot spigot() {
         return server.spigot();
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 76cbc574c0945e66084d0609f441597fef416998..925c878534725b7449f2f658037d3b54bf045d5a 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -16,6 +16,7 @@ import java.util.function.Consumer;
 import java.util.logging.Logger;
 
 import dev.horizonmc.horizon.entity.BotManager;
+import dev.horizonmc.horizon.entity.PhotographerManager;
 import org.bukkit.Warning.WarningState;
 import org.bukkit.advancement.Advancement;
 import org.bukkit.block.data.BlockData;
@@ -2575,6 +2576,11 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
     BotManager getBotManager();
     // Horizon end - Bot API
 
+    // Leaves start - Photographer API
+    @NotNull
+    PhotographerManager getPhotographerManager();
+    // Leaves end - Photographer API
+
     // Purpur start
     /**
      * Get the name of this server
