From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: GideonWhite1029 <gideonwhite1029@gmail.com>
Date: Mon, 25 Mar 2024 14:26:47 +0400
Subject: [PATCH] Add Logger

Powered by Leaves: https://github.com/LeavesMC/Leaves

diff --git a/src/main/java/dev/horizonmc/horizon/HorizonLogger.java b/src/main/java/dev/horizonmc/horizon/HorizonLogger.java
new file mode 100644
index 0000000000000000000000000000000000000000..c3d002305a973c59a2649c5736706dfec978eca2
--- /dev/null
+++ b/src/main/java/dev/horizonmc/horizon/HorizonLogger.java
@@ -0,0 +1,25 @@
+package dev.horizonmc.horizon;
+
+import org.bukkit.Bukkit;
+
+import java.util.logging.Level;
+import java.util.logging.Logger;
+
+public class HorizonLogger extends Logger {
+    public static final HorizonLogger LOGGER = new HorizonLogger();
+
+    private HorizonLogger() {
+        super("Horizon", null);
+        setParent(Bukkit.getLogger());
+        setLevel(Level.ALL);
+    }
+
+    public void severe(String msg, Exception exception) {
+        this.severe(msg + ", " + exception.getCause() + ": " + exception.getMessage());
+    }
+
+    public void warning(String msg, Exception exception) {
+        this.warning(msg + ", " + exception.getCause() + ": " + exception.getMessage());
+    }
+
+}
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 2b93f9b006ec01a77354d6571563fe3bf3d774c8..8322846244e759d9b198474f8104acea51c4fe2b 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -431,6 +431,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     private UUID originWorld;
     public boolean freezeLocked = false; // Paper - Freeze Tick Lock API
     public boolean fixedPose = false; // Paper - Expand Pose API
+    private CompoundTag horizonData = new CompoundTag(); // Horizon - Horizon ex data
     public @Nullable Boolean immuneToFire = null; // Purpur - Fire immune API
 
     public void setOrigin(@javax.annotation.Nonnull Location location) {
@@ -2482,6 +2483,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
                 nbttagcompound.putBoolean("Purpur.FireImmune", immuneToFire);
             }
             // Purpur end
+            nbttagcompound.put("Horizon.Data", horizonData); // Horizon - Horizon ex data
             return nbttagcompound;
         } catch (Throwable throwable) {
             CrashReport crashreport = CrashReport.forThrowable(throwable, "Saving entity NBT");
@@ -2634,6 +2636,11 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
                 immuneToFire = nbt.getBoolean("Purpur.FireImmune");
             }
             // Purpur end
+            // Horizon start
+            if (nbt.contains("Horizon.Data")) {
+                horizonData = nbt.getCompound("Horizon.Data");
+            }
+            // Horizon end
 
         } catch (Throwable throwable) {
             CrashReport crashreport = CrashReport.forThrowable(throwable, "Loading entity NBT");
@@ -4894,6 +4901,13 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         return ((net.minecraft.server.level.ServerChunkCache) level.getChunkSource()).isPositionTicking(this);
     }
     // Paper end - Expose entity id counter
+
+    // Horizon start - horizon ex data
+    public CompoundTag getHorizonData() {
+        return horizonData;
+    }
+    // Horizon end - horizon ex data
+
     // Purpur start
     @Nullable
     private Player rider = null;
