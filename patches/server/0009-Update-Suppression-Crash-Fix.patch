From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: GideonWhite1029 <gideonwhite1029@gmail.com>
Date: Tue, 26 Mar 2024 13:23:07 +0400
Subject: [PATCH] Update Suppression Crash Fix


diff --git a/src/main/java/dev/horizonmc/horizon/HorizonConfig.java b/src/main/java/dev/horizonmc/horizon/HorizonConfig.java
index 10536b275f6c1e540b691a7aee9eb562f5fe27c6..e3546bae38f5cdb689c460d661ce2ae77a9e7fcc 100644
--- a/src/main/java/dev/horizonmc/horizon/HorizonConfig.java
+++ b/src/main/java/dev/horizonmc/horizon/HorizonConfig.java
@@ -84,4 +84,10 @@ public final class HorizonConfig {
     @GlobalConfig(name = "use-vanilla-random", category = {"features"})
     public static boolean useVanillaRandom = false;
 
+    @GlobalConfig(name = "update-suppression-crash-fix", category = {"features"})
+    public static boolean updateSuppressionCrashFix = false;
+
+    @GlobalConfig(name = "cce-update-suppression", category = {"features"})
+    public static boolean cceUpdateSuppression = false;
+
 }
diff --git a/src/main/java/dev/horizonmc/horizon/util/UpdateSuppressionException.java b/src/main/java/dev/horizonmc/horizon/util/UpdateSuppressionException.java
new file mode 100644
index 0000000000000000000000000000000000000000..97a26367413c729181430fb0f25f10633365a9bb
--- /dev/null
+++ b/src/main/java/dev/horizonmc/horizon/util/UpdateSuppressionException.java
@@ -0,0 +1,33 @@
+package dev.horizonmc.horizon.util;
+
+import net.minecraft.core.BlockPos;
+
+public class UpdateSuppressionException extends RuntimeException {
+
+    private final BlockPos pos;
+    private final BlockPos source;
+
+    public UpdateSuppressionException(BlockPos pos, BlockPos source) {
+        super("Update suppression");
+        this.pos = pos;
+        this.source = source;
+    }
+
+    public BlockPos getPos() {
+        return pos;
+    }
+
+    public BlockPos getSource() {
+        return source;
+    }
+
+    public String getMessage() {
+        if (pos != null) {
+            return "An update suppression processed, form [x:%d,y:%d,z:%d] to [x:%d,y:%d,z:%d]"
+                    .formatted(source.getX(), source.getY(), source.getZ(), pos.getX(), pos.getY(), pos.getZ());
+        } else {
+            return "An update suppression processed, form [x:%d,y:%d,z:%d]"
+                    .formatted(source.getX(), source.getY(), source.getZ());
+        }
+    }
+}
diff --git a/src/main/java/net/minecraft/network/protocol/PacketUtils.java b/src/main/java/net/minecraft/network/protocol/PacketUtils.java
index ce44e30d7e2dd6d71d4fa74983437f66ce53183b..f01c16d041a7d6ad5afee81a5693c6a941169dff 100644
--- a/src/main/java/net/minecraft/network/protocol/PacketUtils.java
+++ b/src/main/java/net/minecraft/network/protocol/PacketUtils.java
@@ -51,6 +51,10 @@ public class PacketUtils {
                 if (listener.shouldHandleMessage(packet)) {
                     try { // Paper - timings // Purpur
                         packet.handle(listener);
+                        // Horizon start - update suppression crash fix
+                    } catch (dev.horizonmc.horizon.util.UpdateSuppressionException exception) {
+                        dev.horizonmc.horizon.HorizonLogger.LOGGER.info(exception.getMessage());
+                        // Horizon start - update suppression crash fix
                     } catch (Exception exception) {
                         label25:
                         {
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index e5aa2c785700ff09177d80bb967976b4dc5c012f..28536de4f2a890b68c1cd61d90eeccfce29d9503 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1743,7 +1743,13 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
 
             try {
                 //worldserver.timings.doTick.startTiming(); // Spigot // Purpur
-                worldserver.tick(shouldKeepTicking);
+                // Horizon start
+                try {
+                    worldserver.tick(shouldKeepTicking);
+                } catch (dev.horizonmc.horizon.util.UpdateSuppressionException e) {
+                    dev.horizonmc.horizon.HorizonLogger.LOGGER.info(e.getMessage());
+                }
+                // Horizon end
                 // Paper start
                 for (final io.papermc.paper.chunk.SingleThreadChunkRegionManager regionManager : worldserver.getChunkSource().chunkMap.regionManagers) {
                     regionManager.recalculateRegions();
diff --git a/src/main/java/net/minecraft/world/level/block/ShulkerBoxBlock.java b/src/main/java/net/minecraft/world/level/block/ShulkerBoxBlock.java
index 42407c5c0c09cd9d19bc7af92af8868bb038c686..e83412cddaeecbb11f64b67623e6cff3ff12e6f7 100644
--- a/src/main/java/net/minecraft/world/level/block/ShulkerBoxBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/ShulkerBoxBlock.java
@@ -7,6 +7,11 @@ import java.util.List;
 import java.util.Map;
 import java.util.Optional;
 import javax.annotation.Nullable;
+<<<<<<< HEAD
+=======
+
+import dev.horizonmc.horizon.HorizonConfig;
+>>>>>>> Update Suppression Crash Fix
 import net.minecraft.ChatFormatting;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
@@ -265,7 +270,25 @@ public class ShulkerBoxBlock extends BaseEntityBlock {
 
     @Override
     public int getAnalogOutputSignal(BlockState state, Level world, BlockPos pos) {
+<<<<<<< HEAD
         return AbstractContainerMenu.getRedstoneSignalFromBlockEntity(world.getBlockEntity(pos));
+=======
+        // Horizon start - fix update suppression crash and cce fix
+        if (HorizonConfig.updateSuppressionCrashFix) {
+            try {
+                return HorizonConfig.cceUpdateSuppression ?
+                        AbstractContainerMenu.getRedstoneSignalFromContainer((net.minecraft.world.Container) world.getBlockEntity(pos)) :
+                        AbstractContainerMenu.getRedstoneSignalFromBlockEntity(world.getBlockEntity(pos));
+            } catch (ClassCastException ex) {
+                throw new dev.horizonmc.horizon.util.UpdateSuppressionException(null, pos);
+            }
+        } else {
+            return HorizonConfig.cceUpdateSuppression ?
+                    AbstractContainerMenu.getRedstoneSignalFromContainer((net.minecraft.world.Container) world.getBlockEntity(pos)) :
+                    AbstractContainerMenu.getRedstoneSignalFromBlockEntity(world.getBlockEntity(pos));
+        }
+        // Horizon end - fix update suppression crash and cce fix
+>>>>>>> Update Suppression Crash Fix
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/level/redstone/NeighborUpdater.java b/src/main/java/net/minecraft/world/level/redstone/NeighborUpdater.java
index 19faa8f5f891c1ffbed0af8391dee8202433c447..36469674969b4fff276f48365abeab84e2fc9d73 100644
--- a/src/main/java/net/minecraft/world/level/redstone/NeighborUpdater.java
+++ b/src/main/java/net/minecraft/world/level/redstone/NeighborUpdater.java
@@ -2,6 +2,8 @@ package net.minecraft.world.level.redstone;
 
 import java.util.Locale;
 import javax.annotation.Nullable;
+
+import dev.horizonmc.horizon.HorizonConfig;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
 import net.minecraft.ReportedException;
@@ -66,9 +68,17 @@ public interface NeighborUpdater {
             state.neighborChanged(world, pos, sourceBlock, sourcePos, notify);
             // Spigot Start
         } catch (StackOverflowError ex) {
+            // Horizon start - fix update suppression crash
+            if (HorizonConfig.updateSuppressionCrashFix) {
+                throw new dev.horizonmc.horizon.util.UpdateSuppressionException(pos, sourcePos);
+            }
             world.lastPhysicsProblem = new BlockPos(pos);
             // Spigot End
         } catch (Throwable throwable) {
+            if (HorizonConfig.updateSuppressionCrashFix) {
+                throw new dev.horizonmc.horizon.util.UpdateSuppressionException(pos, sourcePos);
+            }
+            // Horizon end - fix update suppression crash
             CrashReport crashreport = CrashReport.forThrowable(throwable, "Exception while updating neighbours");
             CrashReportCategory crashreportsystemdetails = crashreport.addCategory("Block being updated");
 
