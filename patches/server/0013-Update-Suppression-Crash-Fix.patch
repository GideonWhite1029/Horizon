From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: GideonWhite1029 <gideonwhite1029@gmail.com>
Date: Tue, 26 Mar 2024 13:23:07 +0400
Subject: [PATCH] Update Suppression Crash Fix

Powered by Leaves: https://github.com/LeavesMC/Leaves

diff --git a/src/main/java/dev/horizonmc/horizon/HorizonConfig.java b/src/main/java/dev/horizonmc/horizon/HorizonConfig.java
index 8fddce4a0d873160ede3d11563e72e7254179c40..162ba6f3495054d88e9220fcdd30b22e34ccf41c 100644
--- a/src/main/java/dev/horizonmc/horizon/HorizonConfig.java
+++ b/src/main/java/dev/horizonmc/horizon/HorizonConfig.java
@@ -97,4 +97,10 @@ public final class HorizonConfig {
     @GlobalConfig(name = "disable-packet-limit", category = {"features"})
     public static boolean disablePacketLimit = true;
 
+    @GlobalConfig(name = "update-suppression-crash-fix", category = {"features"})
+    public static boolean updateSuppressionCrashFix = false;
+
+    @GlobalConfig(name = "cce-update-suppression", category = {"features"})
+    public static boolean cceUpdateSuppression = false;
+
 }
\ No newline at end of file
diff --git a/src/main/java/dev/horizonmc/horizon/util/UpdateSuppressionException.java b/src/main/java/dev/horizonmc/horizon/util/UpdateSuppressionException.java
new file mode 100644
index 0000000000000000000000000000000000000000..f30e535767b44e1feadfafa001774b670990d03d
--- /dev/null
+++ b/src/main/java/dev/horizonmc/horizon/util/UpdateSuppressionException.java
@@ -0,0 +1,33 @@
+package dev.horizonmc.horizon.util;
+
+import net.minecraft.core.BlockPos;
+
+public class UpdateSuppressionException extends RuntimeException {
+
+    private final BlockPos pos;
+    private final BlockPos source;
+
+    public UpdateSuppressionException(BlockPos pos, BlockPos source) {
+        super("Update suppression");
+        this.pos = pos;
+        this.source = source;
+    }
+
+    public BlockPos getPos() {
+        return pos;
+    }
+
+    public BlockPos getSource() {
+        return source;
+    }
+
+    public String getMessage() {
+        if (pos != null) {
+            return "An update suppression processed, form [x:%d,y:%d,z:%d] to [x:%d,y:%d,z:%d]"
+                    .formatted(source.getX(), source.getY(), source.getZ(), pos.getX(), pos.getY(), pos.getZ());
+        } else {
+            return "An update suppression processed, form [x:%d,y:%d,z:%d]"
+                    .formatted(source.getX(), source.getY(), source.getZ());
+        }
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/network/protocol/PacketUtils.java b/src/main/java/net/minecraft/network/protocol/PacketUtils.java
index 9f78020aff6da660541253b2f056a4a354ad287a..a291f9f2634ad83602dee2b7971ef3fbf755dc31 100644
--- a/src/main/java/net/minecraft/network/protocol/PacketUtils.java
+++ b/src/main/java/net/minecraft/network/protocol/PacketUtils.java
@@ -52,6 +52,10 @@ public class PacketUtils {
                 if (listener.shouldHandleMessage(packet)) {
                     try { // Paper - timings // Purpur
                         packet.handle(listener);
+                        // Horizon start - update suppression crash fix
+                    } catch (dev.horizonmc.horizon.util.UpdateSuppressionException exception) {
+                        dev.horizonmc.horizon.HorizonLogger.LOGGER.info(exception.getMessage());
+                        // Horizon start - update suppression crash fix
                     } catch (Exception exception) {
                         if (exception instanceof ReportedException) {
                             ReportedException reportedexception = (ReportedException) exception;
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index df5d1fb8b53303bf5badc60f70ba9e4c163ff0cc..3904bcf3600415f5b952fe66d57d1c8665cc550a 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1804,7 +1804,13 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
 
             try {
                 //worldserver.timings.doTick.startTiming(); // Spigot // Purpur
-                worldserver.tick(shouldKeepTicking);
+                // Horizon start
+                try {
+                    worldserver.tick(shouldKeepTicking);
+                } catch (dev.horizonmc.horizon.util.UpdateSuppressionException e) {
+                    dev.horizonmc.horizon.HorizonLogger.LOGGER.info(e.getMessage());
+                }
+                // Horizon end
                 // Paper start
                 for (final io.papermc.paper.chunk.SingleThreadChunkRegionManager regionManager : worldserver.getChunkSource().chunkMap.regionManagers) {
                     regionManager.recalculateRegions();
diff --git a/src/main/java/net/minecraft/world/level/block/ShulkerBoxBlock.java b/src/main/java/net/minecraft/world/level/block/ShulkerBoxBlock.java
index 68431244432a4342041e63218cf7d1eb4eb7ebc0..7e7a1c5d5fe73f880311d4aee9d32dbfd4691393 100644
--- a/src/main/java/net/minecraft/world/level/block/ShulkerBoxBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/ShulkerBoxBlock.java
@@ -7,6 +7,8 @@ import java.util.List;
 import java.util.Map;
 import java.util.Optional;
 import javax.annotation.Nullable;
+
+import dev.horizonmc.horizon.HorizonConfig;
 import net.minecraft.ChatFormatting;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
@@ -231,7 +233,21 @@ public class ShulkerBoxBlock extends BaseEntityBlock {
 
     @Override
     protected int getAnalogOutputSignal(BlockState state, Level world, BlockPos pos) {
-        return AbstractContainerMenu.getRedstoneSignalFromBlockEntity(world.getBlockEntity(pos));
+        // Horizon start - fix update suppression crash and cce fix
+        if (HorizonConfig.updateSuppressionCrashFix) {
+            try {
+                return HorizonConfig.cceUpdateSuppression ?
+                        AbstractContainerMenu.getRedstoneSignalFromContainer((net.minecraft.world.Container) world.getBlockEntity(pos)) :
+                        AbstractContainerMenu.getRedstoneSignalFromBlockEntity(world.getBlockEntity(pos));
+            } catch (ClassCastException ex) {
+                throw new dev.horizonmc.horizon.util.UpdateSuppressionException(null, pos);
+            }
+        } else {
+            return HorizonConfig.cceUpdateSuppression ?
+                    AbstractContainerMenu.getRedstoneSignalFromContainer((net.minecraft.world.Container) world.getBlockEntity(pos)) :
+                    AbstractContainerMenu.getRedstoneSignalFromBlockEntity(world.getBlockEntity(pos));
+        }
+        // Horizon end - fix update suppression crash and cce fix
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/level/redstone/NeighborUpdater.java b/src/main/java/net/minecraft/world/level/redstone/NeighborUpdater.java
index e679b40b9628b0eb7152978ef641f9c918c4c8b2..f711fa41eb948debb1642ad3d8519beb9ad7db0c 100644
--- a/src/main/java/net/minecraft/world/level/redstone/NeighborUpdater.java
+++ b/src/main/java/net/minecraft/world/level/redstone/NeighborUpdater.java
@@ -2,6 +2,8 @@ package net.minecraft.world.level.redstone;
 
 import java.util.Locale;
 import javax.annotation.Nullable;
+
+import dev.horizonmc.horizon.HorizonConfig;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
 import net.minecraft.ReportedException;
@@ -66,9 +68,17 @@ public interface NeighborUpdater {
             state.handleNeighborChanged(world, pos, sourceBlock, sourcePos, notify);
             // Spigot Start
         } catch (StackOverflowError ex) {
+            // Horizon start - fix update suppression crash
+            if (HorizonConfig.updateSuppressionCrashFix) {
+                throw new dev.horizonmc.horizon.util.UpdateSuppressionException(pos, sourcePos);
+            }
             world.lastPhysicsProblem = new BlockPos(pos);
             // Spigot End
         } catch (Throwable throwable) {
+            if (HorizonConfig.updateSuppressionCrashFix) {
+                throw new dev.horizonmc.horizon.util.UpdateSuppressionException(pos, sourcePos);
+            }
+            // Horizon end - fix update suppression crash
             CrashReport crashreport = CrashReport.forThrowable(throwable, "Exception while updating neighbours");
             CrashReportCategory crashreportsystemdetails = crashreport.addCategory("Block being updated");
 
